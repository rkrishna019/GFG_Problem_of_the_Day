class Solution {
    int distinctSubsequences(String S) {
       
       int n = S.length();
       
       long dp[] = new long[n+1];
       dp[0] = 1;
       
       HashMap<Character,Integer> map = new HashMap<>();
       for(int i=1;i<dp.length;i++){
           
           dp[i] = (2*dp[i-1])%1000000007;
           char ch = S.charAt(i-1);
           if(map.containsKey(ch)){
               int j = map.get(ch);
               dp[i] = (dp[i]%1000000007 - dp[j-1] + 1000000007)%1000000007;
           }
           map.put(ch,i);
           
       }
       return (int)dp[n]%1000000007;
    }
}
