class GFG
{
    ArrayList<Integer> find(int arr[], int n, int x)
    {
        ArrayList<Integer> al = new  ArrayList<Integer>();
        int first_Occ = firstOccurence(arr,n,x);
        int last_Occ = lastOccurence(arr,n,x);
        al.add(first_Occ);
        al.add(last_Occ);
        return al;
      
    }
    
    int firstOccurence(int arr[], int n, int x){
        
        int low = 0;
        int high = n-1;
        int first = -1;
        
        while(low<=high){
            int mid = (low+high)/2;
            
            if(arr[mid] == x){
                first = mid;
                high = mid-1;
            }
            
            else if(arr[mid]>x){
                high = mid-1;
            }
            else{
                low = mid+1;
            }
        }
        return first;
    }
    
    int lastOccurence(int arr[],int n,int x){
        
        int low = 0;
        int high = n-1;
        int last = -1;
        
        while(low <= high){
            
            int  mid = (low+high)/2;
            
            if(arr[mid] == x){
                last = mid;
                low = mid+1;
            }
            else if(arr[mid]>x){
                high = mid-1;
            }
            else{
                low = mid+1;
            }
        }
        return last;
    }
}
